// Code generated by MockGen. DO NOT EDIT.
// Source: postgres_storage.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "get-rates-usdt-grpc-service/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRatesStorage is a mock of RatesStorage interface.
type MockRatesStorage struct {
	ctrl     *gomock.Controller
	recorder *MockRatesStorageMockRecorder
}

// MockRatesStorageMockRecorder is the mock recorder for MockRatesStorage.
type MockRatesStorageMockRecorder struct {
	mock *MockRatesStorage
}

// NewMockRatesStorage creates a new mock instance.
func NewMockRatesStorage(ctrl *gomock.Controller) *MockRatesStorage {
	mock := &MockRatesStorage{ctrl: ctrl}
	mock.recorder = &MockRatesStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRatesStorage) EXPECT() *MockRatesStorageMockRecorder {
	return m.recorder
}

// SaveRate mocks base method.
func (m *MockRatesStorage) SaveRate(ctx context.Context, rate *models.Rate) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveRate", ctx, rate)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveRate indicates an expected call of SaveRate.
func (mr *MockRatesStorageMockRecorder) SaveRate(ctx, rate interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveRate", reflect.TypeOf((*MockRatesStorage)(nil).SaveRate), ctx, rate)
}
