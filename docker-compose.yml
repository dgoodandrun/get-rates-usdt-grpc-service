#version: '3'

services:
  rates-service:
    build: .
    container_name: rates-service
    restart: unless-stopped
    env_file: .env
    ports:
      - ${APP_PORT}:${APP_PORT}
    volumes:
      - ./migrations:/app/migrations
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rates-network

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - rates-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 2s
      retries: 5

#  clickhouse:
#    image: clickhouse/clickhouse-server:21.8.10-alpine
#    platform: linux/amd64
#    #container_name: clickhouse
#    env_file: .env
#    environment:
#      CLICKHOUSE_DB: ${CLICKHOUSE_DB}
#      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
#      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
#    ports:
#      - "9000:9000"
#      - "8123:8123"
#    volumes:
#      - clickhouse-data:/var/lib/clickhouse
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8123/ping" ]
#      interval: 5s
#      timeout: 2s
#      retries: 5
#    networks:
#        - rates-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - ${METRICS_PORT}:${METRICS_PORT}
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - rates-network
    depends_on:
      - rates-service

  jaeger:
    image: jaegertracing/all-in-one:1.53
    ports:
      - ${JAEGER_WEB_UI_PORT}:${JAEGER_WEB_UI_PORT}
      - ${JAEGER_COLLECTOR_PORT}:${JAEGER_COLLECTOR_PORT}
    networks:
      - rates-network

networks:
  rates-network:
    driver: bridge

volumes:
  postgres-data:

#volumes:
#  clickhouse-data: